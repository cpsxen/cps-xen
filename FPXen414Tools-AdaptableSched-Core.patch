diff -urBN xen-4.1.4-org/tools/libxc/Makefile xen-4.1.4-pg/tools/libxc/Makefile
--- xen-4.1.4-org/tools/libxc/Makefile	2012-12-18 13:54:18.000000000 +0100
+++ xen-4.1.4-pg/tools/libxc/Makefile	2014-11-03 16:19:47.972485627 +0100
@@ -17,6 +17,7 @@
 CTRL_SRCS-y       += xc_flask.c
 CTRL_SRCS-y       += xc_physdev.c
 CTRL_SRCS-y       += xc_private.c
+CTRL_SRCS-y       += xc_fp.c
 CTRL_SRCS-y       += xc_sedf.c
 CTRL_SRCS-y       += xc_csched.c
 CTRL_SRCS-y       += xc_csched2.c
diff -urBN xen-4.1.4-org/tools/libxc/xc_fp.c xen-4.1.4-pg/tools/libxc/xc_fp.c
--- xen-4.1.4-org/tools/libxc/xc_fp.c	1970-01-01 01:00:00.000000000 +0100
+++ xen-4.1.4-pg/tools/libxc/xc_fp.c	2014-12-12 16:28:37.502235001 +0100
@@ -0,0 +1,118 @@
+/****************************************************************************
+ *
+ ****************************************************************************
+ *
+ *        File: xc_fp.c
+ *
+ * Description: XC Interface to the fixed priority scheduler
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation;
+ * version 2.1 of the License.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
+ */
+
+#include "xc_private.h"
+
+int
+xc_sched_fp_domain_set(
+    xc_interface *xch,
+    uint32_t domid,
+    struct xen_domctl_sched_fp *sdom)
+{
+    DECLARE_DOMCTL;
+
+    domctl.cmd = XEN_DOMCTL_scheduler_op;
+    domctl.domain = (domid_t) domid;
+    domctl.u.scheduler_op.sched_id = XEN_SCHEDULER_FP;
+    domctl.u.scheduler_op.cmd = XEN_DOMCTL_SCHEDOP_putinfo;
+    domctl.u.scheduler_op.u.fp = *sdom;
+
+    return do_domctl(xch, &domctl);
+}
+
+int
+xc_sched_fp_domain_get(
+    xc_interface *xch,
+    uint32_t domid,
+    struct xen_domctl_sched_fp *sdom)
+{
+    DECLARE_DOMCTL;
+    int err;
+
+    domctl.cmd = XEN_DOMCTL_scheduler_op;
+    domctl.domain = (domid_t) domid;
+    domctl.u.scheduler_op.sched_id = XEN_SCHEDULER_FP;
+    domctl.u.scheduler_op.cmd = XEN_DOMCTL_SCHEDOP_getinfo;
+
+    err = do_domctl(xch, &domctl);
+    if ( err == 0 )
+        *sdom = domctl.u.scheduler_op.u.fp;
+
+    return err;
+}
+
+int
+xc_sched_fp_schedule_set(
+    xc_interface *xch,
+    struct xen_sysctl_fp_schedule *schedule)
+{
+    int rc;
+    DECLARE_SYSCTL;
+    DECLARE_HYPERCALL_BOUNCE(
+        schedule,
+        sizeof(*schedule),
+        XC_HYPERCALL_BUFFER_BOUNCE_IN);
+    
+    if ( xc_hypercall_bounce_pre(xch, schedule) )
+        return -1;
+
+    sysctl.cmd = XEN_SYSCTL_scheduler_op;
+    sysctl.u.scheduler_op.cpupool_id = 0;
+    sysctl.u.scheduler_op.sched_id = XEN_SCHEDULER_FP;
+    sysctl.u.scheduler_op.cmd = XEN_SYSCTL_SCHEDOP_putinfo;
+    set_xen_guest_handle(sysctl.u.scheduler_op.u.sched_fp.schedule, schedule);
+    
+    rc = do_sysctl(xch, &sysctl);
+    xc_hypercall_bounce_post(xch, schedule);
+    
+    return rc;
+}
+
+int
+xc_sched_fp_schedule_get(
+    xc_interface *xch,
+    struct xen_sysctl_fp_schedule *schedule)
+{
+    int rc;
+    DECLARE_SYSCTL;
+    DECLARE_HYPERCALL_BOUNCE(
+        schedule,
+        sizeof(*schedule),
+        XC_HYPERCALL_BUFFER_BOUNCE_OUT);
+
+    if ( xc_hypercall_bounce_pre(xch, schedule) )
+        return -1;
+
+    sysctl.cmd = XEN_SYSCTL_scheduler_op;
+    sysctl.u.scheduler_op.cpupool_id = 0;
+    sysctl.u.scheduler_op.sched_id = XEN_SCHEDULER_FP;
+    sysctl.u.scheduler_op.cmd = XEN_SYSCTL_SCHEDOP_getinfo;
+    set_xen_guest_handle(sysctl.u.scheduler_op.u.sched_fp.schedule,
+            schedule);
+
+    rc = do_sysctl(xch, &sysctl);
+
+    xc_hypercall_bounce_post(xch, schedule);
+    
+    return rc;
+}
Binary files xen-4.1.4-org/tools/libxc/.xc_fp.c.swp and xen-4.1.4-pg/tools/libxc/.xc_fp.c.swp differ
diff -urBN xen-4.1.4-org/tools/libxc/xenctrl.h xen-4.1.4-pg/tools/libxc/xenctrl.h
--- xen-4.1.4-org/tools/libxc/xenctrl.h	2012-12-18 13:54:18.000000000 +0100
+++ xen-4.1.4-pg/tools/libxc/xenctrl.h	2014-12-11 16:18:42.053662305 +0100
@@ -675,6 +675,20 @@
                                uint32_t domid,
                                struct xen_domctl_sched_credit2 *sdom);
 
+int xc_sched_fp_domain_set(xc_interface *xch,
+                               uint32_t domid,
+                               struct xen_domctl_sched_fp *sdom);
+
+int xc_sched_fp_domain_get(xc_interface *xch,
+                               uint32_t domid,
+                               struct xen_domctl_sched_fp *sdom);
+
+int xc_sched_fp_schedule_set(xc_interface *xch,
+				struct xen_sysctl_fp_schedule *schedule);
+
+int xc_sched_fp_schedule_get(xc_interface *xch,
+				struct xen_sysctl_fp_schedule *schedule);
+
 int
 xc_sched_arinc653_schedule_set(
     xc_interface *xch,
